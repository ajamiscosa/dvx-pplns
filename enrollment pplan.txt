/* Outdated - Mixed to [User]
 * [Student]
 * StudentNo
 * LastName
 * FirstName
 * MiddleName
 * Gender
 * Birthdate
 * Address
 * EmailAddress
 * ContactNo
 * Class				- Regular / Irregular / Transferred	-> Transferred to enrollment
 * Status				- Active / Inactive
*/


[GuardianInformation] * weak entity of [User]
StudentNo
Father
FOccupation
FAddress
Mother
MOccupation
MAddress
Guardian
GAddress
GContactNo

[Course]
CourseID
Description
DepartmentID**
Status				- Active / Inactive 

[Department]
DepartmentID
Description
CollegeID
Status				- Active / Inactive

[College]
CollegeID
Description
Status				- Active / Deprecated

[Enrollment] * weak entity of [Student]
StudentNo
CourseID
EnrollDate
Class				- New / Transferee
Status				- Regular / Irregular / Transferred / Graduated
CurriculumID		- Curriculum active when student enrolled.

/* Note:
 * 1. Enrollment != Enlistment
 * 		Enrollment = 1 time occurrence per student.
 * 2. Enrollment entry should ALWAYS be done last.
 */
 
[User]
UserID				- Student / Employee ID  of the user. (If that's the case, [Student] will be a weak entity of [User])
Username			- Username format is first.name.middleinitial.last.name ex. juan.e.dela.cruz@email.com
Password			- Default password will be sent to Student.
AccessLevel			- A - Admin, S - Student, R - Registrar, C - Chairperson, F - Faculty Member, D - Dean's Staff
LastName
FirstName
MiddleName
Gender
Birthdate
Address
EmailAddress
ContactNo
LoginStatus			- Pertains to LoginStatus. Online / Offline
AccountStatus		- Active / Inactive

/* Admin should have the capability to assign to a single user options
 * that will be available to his/her account.
 * Access Level will be determined by bit flags corresponding to the
 * capabilities given by the administrator.
 * [Flags]
 * A - Admin, S - Student, R - Registrar, C - Chairperson, F - Faculty Member, D - Dean's Staff
 * 0x001 = Student
 * 0x002 = Faculty Member
 * 
 */
 
[UserLog]
SessionID			- Autogenerated shit.
UserID
LogDate
LoginTime
LogoutTime

[Curriculum]
CurriculumID		- CUR-[CourseID]-s.[Year]
CourseID
Year

[CurriculumMapping]
MappingID			- CMID-[CurriculumID]-[Sem][SubjectCode]
CurriculumID
SubjectCode			- Rule On Subject Codes: Lecture lang ung kukunin na subject code.
PreRequisite		- SubjectCode
Semester
YearLevel


[Room]
RoomID				
Type				- 0 = Lecture Room | 1 = Laboratory 
BuildingID
Status				- 0 = Under Repair / Renovation / O kaya bsta ndi magagamit | 1 = Usable / Available

[Building]			
BuildingID			- BLDG-001
ShortName			- SHL / JPL / HOF / JPL-EXT / HR-Etc.
Description			- Sotero H. Laurel Building / Jose P. Laurel Building / Jose P. Laurel Building - Extension etc

[Section]
SectionID			- SID-[Sem]-[Academic Year] ~ SID-1-1112-0000
Name				- auto generate. non-editable textfield. reads last entry to get current section count under same params.
Type				- 0 = Regular / -1 = Irreg
CourseID				
YearLevel
AcademicYear
Semester

[Subject]			* segregate lecture with lab? makes sense.
SubjectCode
Description
Type				- Lecture / Laboratory / Lecture + Laboratory
Units

/* As for Curriculum mapping, query all the data first then
 * handle units calculation and subject grouping programatically.
 *
 */


[SectionScheduleMapping]	
SectSubMapID		- SSMID-[College]-[SubjectCode]-[Section]-[Sem]-[Academic Year]
SectionID
SubjectCode
FacultyID
RoomID
Day
StartTime
EndTime

[Enlistment]	- last to be filled up.
EnlistmentID
StudentID
SectionID
Date
Remarks
Balance			- babayaran


[Payment]
PaymentID
StudentID
Date
Amount



// test cross reference.
SectionSchedule = Section + Subject + Room + Prof
StudentSchedule = ScheduleID + StudentID




-- 2015-04-27 --
[News]
NewsID
Subject			- Title / Header (No HTML)
Content			- can contain HTML
Category		- Separate Table for this?
Audience		- All | (Per College) | (User Group)
Tags			- well, just tags.
CreatorID		- user id of creator









+----------------------------------+
| ToDO                             |
+----------------------------------+
| <Title>-<Description>-<Status>   |
+----------------------------------+
+----------------------------------+---------------------------------------------------------------------------------
+----------------------------------+
| Enrollment Procedure - Begin     |
+----------------------------------+
+-> Not yet started (May 13, 2015)
++ Steps
 * start of phase 1 (student registration procedure) *
 - Student fillup online registration form found in the website.
 - Display printable accomplished enrollment form w/ control #. to be printed or saved as pdf.
 - Display schedule of examinations.
 * end of student registration procedure *
 
 * start of phase 2 (examination) *
 - Student is to present printed enrollment form (control # may do, but for precision, may be required to bring the printed copy as well)
 - Upon presenting, the enrollment personnel will search the registration using the control #, should ask enrollee whether changes are needed to made.
 - Should no changes be required, enrollment personnel will proceed with the enrollment.
 - Student will be asked to proceed to designated examination room and take the entrance examinations.
 - As we are supposed to be using computerized examination system [#1], having the examination's result should be momentary.
 - Student will be requested to proceed back to the registrar's office to receive the result of the exam and the recommendation for admission.
 * end of phase 2 *
 
 * start of phase 3 (enrollment completion) *
 - Should student not be recommended for admission, no further action will be required.
 - Should student be recommended for admission, registration procedure will continue.
 - Generate class card / enrollment form. (schedule)
 - Student will be given a requirements checklist to be accomplished before the start of the semester
 * end of phase 3 *

Notes
1. Examination system is LAN-based. Subject to change. Should be created independently of this system.
+----------------------------------+
| Enrollment Procedure - End       |
+----------------------------------+
+----------------------------------+---------------------------------------------------------------------------------
+----------------------------------+
| Faculty Loading - Begin          |
+----------------------------------+
+-> Not yet started (May 14, 2015)
++
 * start of faculty member account creation * (ITD view, since ITD is responsible for creating system user accounts)
 - create account
 - assign to college
 - account [inactive] by default
 - faculty member should be instructed to proceed to ITD to activate account.
 +-- password setting should be under this process.
 * end of faculty member account creation *
 
 * start of faculty member profile setup * (To be done by faculty member)
 - fill up lacking personal details etc.
 - from a specified list of subjects being served by the college, pick top 5 preferred subject and rank 5* - 1*.
 - select preferred working days and hours. (does not guarantee the availability of preferred subject with schedule.)
 * end of faculty member profile setup * [#1]

 * start of schedule generation * (chairperson)
 - This is supposed to be auto-generated. Depends on inputs.
 - Create Schedule Plan.
 - Select Semester / Academic Year
 - Display list of system-identified subjects to be offered based on curriculum.
 +-- This list is subject to change based on certain circumstances.
 +-- Chairperson may use this to add subjects that will be offered for irregular students (subjects not normally offered in the semester)
 - Schedule for each subjects have priority. especially in timeslot and room assignment.
 +-- Normal schedule runs from 7am to 7pm.
 +-- Rule: Lec w/ Lab subjects are automatically split to 2 meetings / week. | Lec 2hrs / Lab 3 hrs | 2hrs / 3hrs clustering.
 
 
 
Notes
1. Faculty member may view his/her schedule at his account page after Chairperson releases final schedule for the semester.
 
 
+----------------------------------+
| Faculty Loading - End            |
+----------------------------------+
+----------------------------------+---------------------------------------------------------------------------------
+----------------------------------+
| Registrar Scheduling - Begin     |
+----------------------------------+
+-> Not yet started (May 14, 2015)
++
 * start of registrar scheduling logic * this one's created using projected number of sections to be accommodated. 
 


+----------------------------------+
| Addons                           |
+----------------------------------+
| How about implementing now the   |
| should have been implemented long|
| long time ago. Social network.   |
+----------------------------------+
StudentGroups
---- Subject Specific
---- General (general group for the section; includes all instructors)
-> Created per section.
-> automatic joining of members
-> automatic setting of admin (prof)
-+ What can be found here?
 +-> Assignments
 +-> Quizzes
 +-> Poll
 +-> Posts, of course
 +-> Files (limit @var mb)
 
 
 
[May 13, 2015]
MailingGroups (Distro.)
---- Consolidated sending of emails.
-> Created per group.
-+ Groups may be:
 +-> School.College.All
 +-> School.College.Faculty
 +-> School.College.Students
 +-> School.College.Administrators (dean, chairs, ojt coordinators, etc.)
 +-> School.College.LSG (LSG, Department Student Board)
 +-> School.College.Department.All
 +-> School.College.Department.Faculty
 +-> School.College.Department.Students
 +-> School.College.Department.LSG
 +-> School.Executives
 +-> School.StudentGroup.Heads		(LPU.Lykneko.Heads)
 +-> School.StudentGroup.Members
 +-> School.All						(All Users)
 +-> School.Students.All			(All Students)
 +-> School.Faculty.All				(All Faculty Members)
 +-> School.CollegeHeads			(All Chairs/Deans)
 
 


+----------------------------------+
| Program Specs                    |
+----------------------------------+
| All shits about the program goes |
| here. (Customs / Mods)		   |
+----------------------------------+
Breadcrumb || Home > Academic Groups > Colleges
	- create a class that will generate this.
	format.
	public class SomeClass
	{
		@params
		string s -> separated by a delimiter. comma or semicolon.
			ex. "Home;Academic Group;College"
		public static String CreateBreadCrumb(String s) // String or Link? Just create the fucking breadcrumb.
		{
			return <ol class="breadcrumb">
				<li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
				<li><a href="#">Academic Groups</a></li>
				<li class="active"><a href="#">College</a></li>
			</ol>
		}
	}
	SomeClass.CreateBreadCrumb([])
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

+----------------------------------+
| Useful Stuffs                    |
+----------------------------------+
| Plugins and anything that can be |
| used in development goes here.   |
+----------------------------------+
Progress Bar with beads
http://bootsnipp.com/snippets/featured/progress-bars-responsive

Comment Block
http://bootsnipp.com/snippets/featured/simple-comment-block

Sweet Alert
http://bootsnipp.com/snippets/featured/sweetalert-for-bootstrap

Required Field Indicator
http://bootsnipp.com/snippets/featured/required-field-styling-with-tooltip

Process Steps
http://bootsnipp.com/snippets/featured/form-process-steps

Vertical Tab
http://bootsnipp.com/snippets/featured/simple-vertical-tab

Slidy Panel Footer
http://bootsnipp.com/snippets/featured/slidy-panel-footer

Notification w/ badge
http://bootsnipp.com/snippets/featured/bootstrap-badger

Admin List Panel
http://bootsnipp.com/snippets/featured/admin-lists-panel

Bootgrid
http://www.jquery-bootgrid.com/Examples

Bootstrap Grid
http://www.pontikis.net/labs/bs_grid/demo

Handson Table (excel)
http://handsontable.com

editTable
https://github.com/micc83/editTable

jTable (best table so far.)
http://www.jtable.org/
http://www.codeproject.com/Articles/315938/Real-time-Asynchronous-Web-Pages-using-jTable-Sign

page alerts
http://bootsnipp.com/snippets/featured/page-alerts

google+ styled post.
http://bootsnipp.com/snippets/featured/google-plus-styled-post
























SignalR - realtime
http://stackoverflow.com/questions/28017993/create-real-time-notification-module-like-facebook-for-database-changes

jTable Input form mod.
http://stackoverflow.com/questions/15610156/re-arranging-a-single-column-of-text-inputs-into-multiple-columns


Java DBOvserver
http://stackoverflow.com/questions/22381583/how-to-insert-data-to-mysql-database-that-synchronously-update-the-jtable-in-jav

Comet & Polling
http://stackoverflow.com/questions/1086380/how-does-facebook-gmail-send-the-real-time-notification



















--------
May 13, 2015
Separate project. Project Social Network. O.o
- ihiwalay ung social network sa enrollment. sounds good.